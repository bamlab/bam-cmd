#!/usr/bin/env node

var options = require('commander');
var inquirer = require('inquirer');
var $q = require('bluebird');
var fs = require('fs');
require('colors');
var bamCmd = require('..');


function parseOptions() {
  var params = {
    dir: '.'
  };
  var repoNameDefer = $q.defer();

  options
    .arguments('[repoName] [dir]')
    .action(function(name, dir) {
      params.repoName = name;
      if (dir) {
        params.dir = dir;
      }
    })
    .parse(process.argv);

  if (params.repoName !== null) {
    repoNameDefer.resolve(params);

  } else { // Ask for a repo
    inquirer.prompt({
      name: 'repoName',
      message: 'Which project do you want to install?'
    }, function (answer) {
      params.repoName = answer.repoName;
      repoNameDefer.resolve(params);
    });
  }
  return repoNameDefer.promise;
}

function checkDirEmpty(param) {
  return $q.promisify(fs.readdir)(param.dir)
    .then(function(list) {
      if (list.length !== 0) {
        return $q.reject('Directory not empty');
      }
      return param;
    });
}

parseOptions()
  .then(checkDirEmpty)
  .then(function(param) {
    return bamCmd.installProject(param.repoName, param.dir, true);
  })
  .catch(function (err) {
    console.error((err + '').red);
    console.error('Aborting.'.red);
    process.exit(1);
  });
