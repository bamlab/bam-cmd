#!/usr/bin/env node

var options = require('commander');
var inquirer = require('inquirer');
var $q = require('bluebird');
var fs = require('fs');
var exec = require('child_process').exec;

function parseOptions() {
	var repoName = null;
	var repoNameDefer = $q.defer();

	options
		.arguments('[repoName]')
		.action(function(name) {
			repoName = name;
		})
		.parse(process.argv);

	if (repoName !== null) {
		repoNameDefer.resolve(repoName);

	} else { // Ask for a repo
		inquirer.prompt({
			name: 'repoName',
			message: 'Which project do you want to install?'
		}, function (answer) {
			repoNameDefer.resolve(answer.repoName);
		});
	}
	return repoNameDefer.promise;
}

function clone(repoName) {
	if (fs.readdirSync('.').length !== 0) {
		return $q.reject('Directory not empty');
	}
	
	exec('git clone git@github.com:bamlab/' + repoName + '.git', function(err, stdout, stderr){
		console.log('err');
		console.log(err);
		console.log('stdout');
		console.log(stdout);
		console.log('stderr');
		console.log(stderr);
	});
	
}

parseOptions()
	.then(clone)
	.catch(function (err) {
		console.error(err);
		console.error('Abording.');
		process.exit(1);
	})
;
